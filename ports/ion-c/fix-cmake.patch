diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0737d7f..2ef36c3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -23,21 +23,6 @@ set(IONC_ENABLE_VERBOSE_DEBUG OFF CACHE BOOL "Enable verbose logging for ion-c")
 if (CMAKE_BUILD_TYPE STREQUAL "Release")
    add_compile_definitions(NDEBUG=1)
 elseif (CMAKE_BUILD_TYPE STREQUAL "Debug")
-   include(CheckCXXCompilerFlag)
-   # check_cxx_compiler_flag doesn't just check compiler flags, it also attempts to link the program, which
-   # in this case, also requires sanitizer flags. So we have to abuse CMAKE_REQUIRED_LINK_OPTIONS since that's
-   # the only lever we're given afaict. This does not work with cmake prior to 3.14.
-   list(INSERT CMAKE_REQUIRED_LINK_OPTIONS 0 "-fsanitize=address,undefined")
-   check_cxx_compiler_flag("-g -fsanitize=address,undefined -fno-omit-frame-pointer" UBISAN_OK)
-   list(REMOVE_AT CMAKE_REQUIRED_LINK_OPTIONS 0)
-   if (UBISAN_OK OR IONC_FORCE_SANITIZERS)
-      add_compile_options(
-         -fsanitize=address,undefined
-         -fsanitize-recover=address
-      )
-      add_link_options(-fsanitize=address,undefined -fsanitize-recover=address)
-   endif()
-   add_compile_options(-g -fno-omit-frame-pointer -fno-optimize-sibling-calls)
    if (IONC_ENABLE_VERBOSE_DEBUG)
        add_compile_definitions(DEBUG=1)
    endif()
@@ -53,13 +38,13 @@ elseif (CMAKE_BUILD_TYPE STREQUAL "Profiling")
 endif()
 
 ## ion-c Build Version
-set(IONC_FULL_VERSION ${CMAKE_PROJECT_VERSION})
-find_program(GIT_EXECUTABLE "git")
+option(IONC_BUILD_REF "Git build ref" "n/a")
 add_custom_target(
    version
    ${CMAKE_COMMAND} -D SRC=${CMAKE_CURRENT_SOURCE_DIR}/build_version.h.in
                     -D DST=${CMAKE_CURRENT_BINARY_DIR}/build_version.h
-                    -D GIT_EXECUTABLE=${GIT_EXECUTABLE}
+                    -D IONC_FULL_VERSION=${CMAKE_PROJECT_VERSION}
+                    -D IONC_GIT_REF=${IONC_GIT_REF}
                     -P ${CMAKE_CURRENT_SOURCE_DIR}/cmake/VersionHeader.cmake
 )
 
@@ -107,7 +92,6 @@ add_custom_target(uninstall
 
 add_subdirectory(decNumber)
 add_subdirectory(ionc)
-add_subdirectory(tools)
 if (IONC_BUILD_TESTS)
    if (NOT TARGET gtest_main)
       message("Using included google-test")
diff --git a/cmake/VersionHeader.cmake b/cmake/VersionHeader.cmake
index 2bdcd36..33e0045 100644
--- a/cmake/VersionHeader.cmake
+++ b/cmake/VersionHeader.cmake
@@ -1,23 +1,8 @@
-set(IONC_FULL_VERSION "${CMAKE_PROJECT_VERSION}")
-if (GIT_EXECUTABLE)
-   execute_process(
-      COMMAND ${GIT_EXECUTABLE} describe --long --tags --dirty --match "v*"
-      OUTPUT_VARIABLE GIT_DESCRIBE_OUTPUT
-      RESULT_VARIABLE GIT_DESCRIBE_ERROR
-      OUTPUT_STRIP_TRAILING_WHITESPACE
-      WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
-   )
-   if (NOT GIT_DESCRIBE_ERROR)
-      # Describe output will be in the form v<version>-<commits>-g<hash>[-dirty]
-      set(IONC_FULL_VERSION ${GIT_DESCRIBE_OUTPUT})
-   endif()
-endif()
-
-string(REGEX MATCH "^v([0-9]+)\\.([0-9]+)\\.([0-9]+)-[0-9]+-g([a-zA-Z0-9-]+)$" IONC_FULL_VERSION_MATCH "${IONC_FULL_VERSION}")
+string(REGEX MATCH "^([0-9]+)\\.([0-9]+)\\.([0-9]+)$" IONC_FULL_VERSION_MATCH "${IONC_FULL_VERSION}")
 set(IONC_VERSION_MAJOR ${CMAKE_MATCH_1})
 set(IONC_VERSION_MINOR ${CMAKE_MATCH_2})
 set(IONC_VERSION_PATCH ${CMAKE_MATCH_3})
-set(IONC_VERSION_HASH ${CMAKE_MATCH_4})
+set(IONC_VERSION_HASH ${IONC_GIT_REF})
 set(IONC_VERSION "v${IONC_VERSION_MAJOR}.${IONC_VERSION_MINOR}.${IONC_VERSION_PATCH}")
 
 configure_file(${SRC} ${DST} @ONLY)
